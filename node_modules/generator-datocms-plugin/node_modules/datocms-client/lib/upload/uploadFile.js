"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = uploadFile;

var _fetch = _interopRequireDefault(require("../utils/fetch"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var rawUploadFile = process.browser ? require('./adapters/browser').default : require('./adapters/node').default;

var wait = function wait(ms) {
  return new Promise(function (r) {
    return setTimeout(r, ms);
  });
};

var imageFormats = ['png', 'jpg', 'jpeg', 'gif'];

var retryOperation = function retryOperation(operation, delay, times) {
  return new Promise(function (resolve, reject) {
    return operation().then(resolve).catch(function (reason) {
      if (times - 1 > 0) {
        return wait(delay).then(retryOperation.bind(null, operation, delay, times - 1)).then(resolve).catch(reject);
      }

      return reject(reason);
    });
  });
};

var fetchJson = function fetchJson(url) {
  return (0, _fetch.default)(url).then(function (res) {
    if (res.status === 200) {
      return res.json();
    }

    throw res.status;
  });
};

function uploadFile(client, source) {
  return rawUploadFile(client, source).then(function (hash) {
    if (imageFormats.indexOf(hash.format) < 0) {
      return Promise.resolve(Object.assign({
        width: null,
        height: null
      }, hash));
    }

    return retryOperation(fetchJson.bind(null, "https://www.datocms-assets.com".concat(hash.path, "?fm=json")), 500, 5).then(function (_ref) {
      var PixelHeight = _ref.PixelHeight,
          PixelWidth = _ref.PixelWidth;
      return Object.assign({
        height: PixelHeight,
        width: PixelWidth
      }, hash);
    });
  }).then(function (attributes) {
    return client.uploads.create(Object.assign({
      alt: '',
      title: ''
    }, attributes));
  }).then(function (upload) {
    return Promise.resolve(upload.id);
  });
}