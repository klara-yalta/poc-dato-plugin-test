"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _querystring = _interopRequireDefault(require("querystring"));

var _humps = require("humps");

var _ApiException = _interopRequireDefault(require("./ApiException"));

var _package = _interopRequireDefault(require("../package.json"));

var _fetch = _interopRequireDefault(require("./utils/fetch"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var undefinedToNull = function undefinedToNull(k, v) {
  return v === undefined ? null : v;
};

var decamelizeKeys = function decamelizeKeys(payload) {
  return (0, _humps.decamelizeKeys)(payload, function (key, convert, options) {
    if (key === 'require2fa') {
      return 'require_2fa';
    }

    return convert(key, options);
  });
};

var Client =
/*#__PURE__*/
function () {
  function Client(token, extraHeaders, baseUrl) {
    _classCallCheck(this, Client);

    this.baseUrl = baseUrl;
    this.token = token;
    this.extraHeaders = extraHeaders;
  }

  _createClass(Client, [{
    key: "get",
    value: function get(url) {
      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return this.request(this.buildUrl(url, params), options);
    }
  }, {
    key: "put",
    value: function put(url, body) {
      var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
      return this.request(this.buildUrl(url, params), Object.assign({
        method: 'PUT',
        body: JSON.stringify(decamelizeKeys(body), undefinedToNull)
      }, options));
    }
  }, {
    key: "post",
    value: function post(url, body) {
      var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
      return this.request(this.buildUrl(url, params), Object.assign({
        method: 'POST',
        body: JSON.stringify(decamelizeKeys(body), undefinedToNull)
      }, options));
    }
  }, {
    key: "delete",
    value: function _delete(url) {
      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return this.request(this.buildUrl(url, params), Object.assign({
        method: 'DELETE'
      }, options));
    }
  }, {
    key: "defaultHeaders",
    value: function defaultHeaders() {
      return {
        'content-type': 'application/json',
        accept: 'application/json',
        authorization: "Bearer ".concat(this.token),
        'user-agent': "js-client v".concat(_package.default.version),
        'X-Api-Version': '2'
      };
    }
  }, {
    key: "buildUrl",
    value: function buildUrl(path) {
      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var query = Object.keys(params).length ? "?".concat(_querystring.default.stringify(params)) : '';
      return "".concat(this.baseUrl).concat(path).concat(query);
    }
  }, {
    key: "request",
    value: function request(url) {
      var _this = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var fullHeaders = Object.assign({}, this.defaultHeaders(), this.extraHeaders, options.headers);
      var fullOptions = Object.assign({}, options, {
        headers: fullHeaders
      });
      return (0, _fetch.default)(url, fullOptions).then(function (res) {
        if (res.status !== 204) {
          return res.json().then(function (body) {
            return [res, body];
          });
        }

        return Promise.resolve([res, null]);
      }).then(function (_ref) {
        var _ref2 = _slicedToArray(_ref, 2),
            res = _ref2[0],
            body = _ref2[1];

        if (res.status >= 200 && res.status < 300) {
          return Promise.resolve((0, _humps.camelizeKeys)(body));
        }

        return Promise.reject(new _ApiException.default(res, (0, _humps.camelizeKeys)(body)));
      }).catch(function (error) {
        if (error && error.body.data && error.body.data.some(function (e) {
          return e.attributes.code === 'BATCH_DATA_VALIDATION_IN_PROGRESS';
        })) {
          return new Promise(function (r) {
            return setTimeout(r, 1000);
          }).then(function () {
            return _this.request(url, options);
          });
        }

        throw error;
      });
    }
  }]);

  return Client;
}();

exports.default = Client;