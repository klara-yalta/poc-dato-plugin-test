"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _ora = _interopRequireDefault(require("ora"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

var _default =
/*#__PURE__*/
function () {
  var _ref = _asyncToGenerator(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee(client) {
    var spinner, environments, environment, rawLocales, defaultLocale, locales, rawContentTypes, contentTypes, rawEntries, entries, rawAssets, assets;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            spinner = (0, _ora.default)('Downloading Contentful data structure').start();
            _context.next = 3;
            return client.getEnvironments();

          case 3:
            environments = _context.sent;
            environment = environments.items.find(function (e) {
              return e.name === 'master';
            });
            _context.next = 7;
            return environment.getLocales();

          case 7:
            rawLocales = _context.sent;
            defaultLocale = rawLocales.items.find(function (locale) {
              return locale.default;
            }).code;
            locales = rawLocales.items.map(function (locale) {
              return locale.code;
            });
            _context.next = 12;
            return environment.getContentTypes();

          case 12:
            rawContentTypes = _context.sent;
            contentTypes = rawContentTypes.items;
            _context.next = 16;
            return environment.getEntries();

          case 16:
            rawEntries = _context.sent;
            entries = rawEntries.items;
            _context.next = 20;
            return environment.getAssets();

          case 20:
            rawAssets = _context.sent;
            assets = rawAssets.items;
            spinner.succeed();
            return _context.abrupt("return", {
              defaultLocale: defaultLocale,
              locales: locales,
              contentTypes: contentTypes,
              entries: entries,
              assets: assets
            });

          case 24:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function (_x) {
    return _ref.apply(this, arguments);
  };
}();

exports.default = _default;