export interface ResolvedUri {
    url: string;
    hash: string[];
}
export declare type Retriever = (url: string) => Promise<any>;
export interface ParseOptions {
    scope?: string;
    store?: {
        [uri: string]: any;
    };
    retriever?: Retriever;
}
export declare function resolveUri(path: string, scope?: string): ResolvedUri;
export declare function normalizeUri(path: string, scope?: string, omitEmptyFragment?: boolean): string;
export declare function pointer(data: any, path: string | string[], value?: any): any;
export declare function scope(data: any): string;
export declare function parse(dataOrUri: any, opts?: ParseOptions): Promise<any>;
export declare function normalize(data: any, scope: string): any;
